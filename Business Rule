-----------------------------------------------------------Name: Close and Cascade Comments to Child Tasks---------------------

Type: Business Rule

Table: Incident

Description: This example will close and cascade comments to child incidents after the parent has been closed.

Parameters: Run: After insert and update

Script:

Condition: <source lang="javascript">current.active.changesTo(false)</source> Script: <source lang="javascript">cascadeComment();

function cascadeComment(){

var cmt = current.comments;
var inc = new GlideRecord("incident");
inc.addQuery("parent", "=", current.sys_id);
inc.query();
  while (inc.next()) {
   inc.comments = cmt;
   inc.incident_state.setValue( 7);
   inc.active.setValue(false);
   inc.update();
   gs.print("Incident " + inc.number + " closed based on closure of incident " + current.number);
  }


(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	
	 var aggIncident = new GlideAggregate('incident');

    // Add query parameters
    aggIncident.addQuery('active','=',true);

    // Add Aggregate  
    aggIncident.addAggregate('COUNT','caller_id');

    // Execute query 
    aggIncident.query();

    // Process returned records
    while(aggIncident.next()){
        // Create a message to display the count of the Caller's active Incidents
        if (aggIncident.caller_id == current.caller_id){
            var msg = aggIncident.caller_id.name + " has " + aggIncident.getAggregate('COUNT','caller_id') + " active incidents." ;
            gs.addInfoMessage(msg);
        }
    }

})(current, previous);
